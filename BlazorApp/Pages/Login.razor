@layout LoginLayout

@page "/"


<div class="get-started" id="login-screen">
    <p>
        <span class="material-icons" id="login-logo">
            maps_ugc
        </span>
        Blazor <span class="login-p-subtitle">Chat</span>

    </p>

    <EditForm class="login-frm" Model="@loginModel" OnValidSubmit="ConnectServer">
        <DataAnnotationsValidator />

        @if (ShowConnectingText)
        {
            <p>Sunucuya Bağlanılıyor Lütfen Bekleyiniz...</p>
            <img src="img/spinner-icon-gif-24.jpg" />
        }
        else
        {
            <InputText @bind-Value="@loginModel.Name" type="text" id="email" class="login-form" placeholder="Name" />
            <ValidationMessage For="@(() => loginModel.Name)" />
            <InputText @bind-Value="@loginModel.Surname" type="password" class="login-form" placeholder="Surname" />
            <ValidationMessage For="@(() => loginModel.Surname)" />

            <button class="login-btn">
                Login
            </button>

            @if (LoginService.User != null)
            {
                <p> Oturum Açan Kullanıcı : @LoginService.User.FullName </p>
            }
        }


    </EditForm>

    <AlertBox>

    </AlertBox>
</div>


@code{
    LoginModel loginModel = new LoginModel();

    private async Task ConnectServer()
    {
        string hubUrl = NavigationManager.BaseUri.TrimEnd('/') + ChatHub.HUB_URL;
        try
        {
            ShowConnectingText = true;
            await Task.Delay(3000);
            await LoginService.Login(loginModel, hubUrl);
            StateHasChanged();
        }
        catch (Exception e)
        {
            AlertService.ShowErrorAlert(e.Message);
            StateHasChanged();
        }
    }

    private void ConnectTestServer()
    {

    }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public IAlertService AlertService { get; set; }

    [Inject]
    public ILoginService LoginService { get; set; }


    private bool IsConnected
    {
        get
        {
            if (LoginService.User == null)
                return false;
            else
                return LoginService.User.IsConnect;
        }
    }

    private bool ShowConnectingText
    {
        get;
        set;
    }
}
